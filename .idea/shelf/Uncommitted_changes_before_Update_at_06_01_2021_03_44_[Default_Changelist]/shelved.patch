Index: app/src/main/res/layout/activity_chat.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_chat.xml	(revision 40477c84d941332a5a2c7fc2574b04e1f4b782c8)
+++ app/src/main/res/layout/activity_chat.xml	(date 1609896850479)
@@ -1,7 +1,75 @@
 <?xml version="1.0" encoding="utf-8"?>
-<RelativeLayout
-    xmlns:android="http://schemas.android.com/apk/res/android"
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
-    android:layout_height="match_parent">
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    app:layout_behavior="@string/appbar_scrolling_view_behavior"
+    tools:context=".ChatActivity"
+    tools:showIn="@layout/activity_chat">
+
+
+    <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+        xmlns:app="http://schemas.android.com/apk/res-auto"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        >
+
+        <FrameLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:layout_above="@+id/send_message_layout">
+
+            <androidx.recyclerview.widget.RecyclerView            android:id="@+id/recycler_view_chat"
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+
+            app:layoutManager="LinearLayoutManager" />
+
+            <TextView
+                android:id="@+id/no_chats_avilable"
+                android:visibility="invisible"
+                android:padding="16dp"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center"
+                android:text="no_chats_available"
+                android:textColor="@color/black"
+                android:textSize="20dp"/>
+        </FrameLayout>
+
+        <LinearLayout
+            android:layout_alignParentBottom="true"
+            android:orientation="horizontal"
+            android:layout_width="match_parent"
+            android:id="@+id/send_message_layout"
+            android:layout_height="wrap_content">
+
+            <EditText
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:inputType="textPersonName"
+                android:ems="10"
+                android:id="@+id/edit_text_message"
+                android:hint="Type Message to Send" />
+
+            <ImageView
+                android:layout_width="50dp"
+                android:layout_height="50dp"
+                android:id="@+id/image_message_send"
+                android:src="@drawable/gallery"
+                android:layout_weight="0.1" />
+
+            <ImageButton
+                android:layout_width="50dp"
+                android:layout_height="50dp"
+                android:id="@+id/text_message_send"
+                android:src="@drawable/send"
+                android:layout_weight="0.1" />
+        </LinearLayout>
+
+    </RelativeLayout>
+
 
-</RelativeLayout>
\ No newline at end of file
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/tiptop/Database/Database2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.tiptop.Database;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.view.WindowManager;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.tiptop.Adapters.TaskToChildExtendListAdapter;\r\nimport com.example.tiptop.LogInAndSignUp.LoginActivity;\r\nimport com.example.tiptop.LogInAndSignUp.LogoActivity;\r\nimport com.example.tiptop.Objects.Task;\r\nimport com.example.tiptop.Objects.User;\r\nimport com.example.tiptop.Points.PointsParentActivity;\r\nimport com.example.tiptop.R;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.firebase.FirebaseApp;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.time.LocalDate;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.HashMap;\r\n\r\nimport static java.time.temporal.ChronoUnit.DAYS;\r\n\r\npublic class Database2  extends AppCompatActivity implements ValueEventListener {\r\n\r\n    private static DataSnapshot dataSnapshot;\r\n    private static ArrayList<DataChangeListener> listeners;\r\n    private static FirebaseStorage storage = FirebaseStorage.getInstance();\r\n    private static DatabaseReference reference = FirebaseDatabase.getInstance().getReference();\r\n    private static FirebaseAuth mAuth = FirebaseAuth.getInstance();\r\n    private static String userID;\r\n    private static String currFamilyId;\r\n    private static String permission;\r\n    private static String TitleSpinnerOfBelongChild;\r\n    private static long currPoint;\r\n\r\n    private static int SPLASH_SCREEN = 1000;\r\n\r\n    private TextView logo_text;\r\n    private ImageView logo_image;\r\n\r\n    private static final DatabaseReference.CompletionListener completionListener = new DatabaseReference.CompletionListener() {\r\n        @Override\r\n        public void onComplete(DatabaseError error, DatabaseReference ref) {\r\n            if (error != null) {\r\n            } else {\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);\r\n        setContentView(R.layout.activity_logo);\r\nLog.v(\"gggggggggggggggggg: \", \"startt\");\r\n        logo_text = (TextView) findViewById(R.id.logo_text);\r\n        logo_image = (ImageView) findViewById(R.id.logo_image);\r\n\r\n//        if(!FirebaseApp.getApps(this).isEmpty()) {\r\n//            FirebaseDatabase.getInstance().setPersistenceEnabled(true);\r\n//        }\r\n        reference.addValueEventListener(this);\r\n        listeners = new ArrayList<>();\r\n\r\n        new Handler().postDelayed(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                Intent go_to_login = new Intent(Database2.this, LoginActivity.class);\r\n                startActivity(go_to_login);\r\n                finish();\r\n            }\r\n        },SPLASH_SCREEN);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n        dataSnapshot = snapshot;\r\n        notifyAllListeners();\r\n    }\r\n\r\n    @Override\r\n    public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n    }\r\n\r\n    public static void addListener(DataChangeListener listener){\r\n        listeners.add(listener);\r\n    }\r\n\r\n    public static boolean removeListener(DataChangeListener listener){\r\n        return listeners.remove(listener);\r\n    }\r\n\r\n    private static void notifyAllListeners(){\r\n        for (DataChangeListener listener : listeners) {\r\n            listener.notifyOnChange();\r\n        }\r\n    }\r\n\r\n    public static String getCurrFamilyId() {\r\n        return currFamilyId;\r\n    }\r\n\r\n    public static String getPermission() {\r\n        return permission;\r\n    }\r\n\r\n    public static String getKeyForNewTask() {\r\n        return reference.child(\"Tasks\").child(currFamilyId).push().getKey();\r\n    }\r\n\r\n    public static void getPoints (TextView numOfPoints ){\r\n        numOfPoints.setText (String.valueOf(dataSnapshot.child(\"Users\").child(userID).child(\"points\").getValue(long.class)));;\r\n    }\r\n\r\n    public static void setStatus(String taskID, String Status) {\r\n        reference.child(\"Tasks\").child(currFamilyId).child(taskID).child(\"status\").setValue(Status);\r\n    }\r\n\r\n    public static void setConfirmedDate(String taskID) {\r\n        int year = Calendar.getInstance().get(Calendar.YEAR);\r\n        int month = Calendar.getInstance().get(Calendar.MONTH)+1;\r\n        int day = Calendar.getInstance().get(Calendar.DAY_OF_MONTH);\r\n        String zeroMonth = \"\";\r\n        String zeroDay = \"\";\r\n        if (month<10) zeroMonth = \"0\";\r\n        if (day < 10) zeroDay = \"0\";\r\n        String currentDate = \"\" + year + \"-\" + zeroMonth + month + \"-\" +zeroDay + day;\r\n        reference.child(\"Tasks\").child(currFamilyId).child(taskID).child(\"confirmedDate\").setValue(currentDate);\r\n    }\r\n\r\n    public static void setbelongsToUID(String taskID, String uid) {\r\n        if (uid != null)\r\n            reference.child(\"Tasks\").child(currFamilyId).child(taskID).child(\"belongsToUID\").setValue(uid);\r\n        else\r\n            reference.child(\"Tasks\").child(currFamilyId).child(taskID).child(\"belongsToUID\").removeValue();\r\n    }\r\n\r\n    public static void setFamilyName(String key, String familyName) {\r\n        reference.child(\"Families\").child(key).child(\"Family name\").setValue(familyName);\r\n    }\r\n\r\n    public static void setUserToFamily(String familyKey, String userName) {\r\n        reference.child(\"Families\").child(familyKey).child(userID).setValue(userName);\r\n    }\r\n\r\n    public static void setUserToUserFamily(String familyKey, String familyName) {\r\n        reference.child(\"UserFamilies\").child(userID).child(familyKey).setValue(familyName);\r\n    }\r\n\r\n    public static void setUser(User userToAdd) {\r\n        reference.child(\"Users\").child(userID).setValue(userToAdd);\r\n    }\r\n\r\n    public static void setCurrFamilyId(String CurrFamilyId) {\r\n        currFamilyId = CurrFamilyId;\r\n        reference.child(\"Users\").child(userID).child(\"currFamilyId\").setValue(CurrFamilyId);\r\n    }\r\n\r\n    public static void addTaskToDB(String key, Task toAddTask) {\r\n        reference.child(\"Tasks\").child(currFamilyId).child(key).setValue(toAddTask);\r\n    }\r\n\r\n    public static void setTaskDesctiption(String taskID, String descriptionToUpdate) {\r\n        reference.child(\"Tasks\").child(currFamilyId).child(taskID).child(\"description\").setValue(descriptionToUpdate);\r\n    }\r\n\r\n    public static void setTaskComment(String taskID, String commentToUpdate) {\r\n        reference.child(\"Tasks\").child(currFamilyId).child(taskID).child(\"comment\").setValue(commentToUpdate);\r\n    }\r\n\r\n    public static void setTaskName(String taskID, String nameToUpdate) {\r\n        reference.child(\"Tasks\").child(currFamilyId).child(taskID).child(\"nameTask\").setValue(nameToUpdate);\r\n    }\r\n\r\n    public static void setTaskBonus(String taskID, int bonusToUpdate) {\r\n        reference.child(\"Tasks\").child(currFamilyId).child(taskID).child(\"bonusScore\").setValue(bonusToUpdate);\r\n    }\r\n\r\n    public static String getAndSetTitleSpinnerOfBelongChild(String BelongsToUID) {\r\n        TitleSpinnerOfBelongChild = dataSnapshot.child(\"Users\").child(BelongsToUID).child(\"name\").getValue().toString();\r\n        return TitleSpinnerOfBelongChild;\r\n    }\r\n\r\n    public static void addPointsToChild (Task conformedTask){\r\n        currPoint = dataSnapshot.child(\"Users\").child(conformedTask.getBelongsToUID()).child(\"points\").getValue(long.class) + conformedTask.getBonusScore();\r\n        reference.child(\"Users\").child(conformedTask.getBelongsToUID()).child(\"points\").setValue(currPoint);\r\n    }\r\n\r\n    public static void updateListOfChildFromDB(ArrayList<String> allKeys, ArrayList<String> allKids, ArrayAdapter adapter) {\r\n        allKids.clear();\r\n        allKeys.clear();\r\n        allKids.add(\"Not Associated\");\r\n        Iterable<DataSnapshot> UsersInFamily = dataSnapshot.child(\"Families\").child(currFamilyId).getChildren();\r\n        for (DataSnapshot User : UsersInFamily) {\r\n            String toAddChildren = (String) User.getValue();\r\n            String toAddKey = (String) User.getKey();\r\n            if (User.getKey().equals(\"Family name\")) {\r\n            }\r\n            else {\r\n                if (dataSnapshot.child(\"Users\").child(User.getKey()).child(\"type\").getValue().toString().equals(\"Child\")) {\r\n                    allKeys.add(toAddKey);\r\n                    allKids.add(toAddChildren);\r\n                }\r\n            }\r\n            adapter.notifyDataSetChanged();\r\n        }\r\n    }\r\n\r\n    public static void updateListOfFamilyFromDB(ArrayList<String> allKeys, ArrayList<String> allFamilies, ArrayAdapter adapter) {\r\n        allFamilies.clear();\r\n        allKeys.clear();\r\n        Iterable<DataSnapshot> FamilysOfUsers = dataSnapshot.child(\"UserFamilies\").child(userID).getChildren();\r\n        for(DataSnapshot Family :FamilysOfUsers){\r\n            allFamilies.add((String) Family.getValue());\r\n            allKeys.add(Family.getKey());\r\n        }\r\n        int pos = allKeys.indexOf(currFamilyId);\r\n        if (pos > 0) {\r\n            String Family = allFamilies.get(pos);\r\n            allFamilies.remove(Family);\r\n            allFamilies.add(0, Family);\r\n            allKeys.remove(currFamilyId);\r\n            allKeys.add(0, currFamilyId);\r\n        }\r\n        adapter.notifyDataSetChanged();\r\n    }\r\n\r\n    public static void updateTaskListFromDB(ArrayList<Task> toUpdate, ArrayList<String> idToUpdate, String status, ArrayAdapter<Task> mTaskListAdapter) {\r\n        toUpdate.clear();\r\n        idToUpdate.clear();\r\n        Iterable<DataSnapshot> Tasks = dataSnapshot.child(\"Tasks\").child(currFamilyId).getChildren();\r\n        for (DataSnapshot Task : Tasks){\r\n            if (permission.equals(\"Parent\") && Task.child(\"status\").getValue().equals(status)) {\r\n                Task toAdd = Task.getValue(Task.class);\r\n                toUpdate.add(toAdd);\r\n                idToUpdate.add(Task.getKey());\r\n            } else if (permission.equals(\"Child\") && Task.child(\"belongsToUID\").getValue() != null &&\r\n                    Task.child(\"belongsToUID\").getValue().equals(userID) && Task.child(\"status\").getValue().equals(status)) {\r\n                Task toAdd = Task.getValue(Task.class);\r\n                toUpdate.add(toAdd);\r\n                idToUpdate.add(Task.getKey());\r\n            }\r\n        }\r\n        mTaskListAdapter.notifyDataSetChanged();\r\n    }\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.O)\r\n    public static void updateExpandableTaskListFromDB(ArrayList<String> ListChildForTask, HashMap<String, ArrayList<Task>> ListTaskGroups, HashMap<String, ArrayList<String>> ListTaskID, String status, TaskToChildExtendListAdapter childAdapter, int days, boolean endOrConfirmed) {\r\n        ListChildForTask.clear();\r\n        Iterable<DataSnapshot> UsersInFamily = dataSnapshot.child(\"Families\").child(currFamilyId).getChildren();\r\n        for (DataSnapshot User : UsersInFamily) {\r\n            String toAddChildren = (String) User.getValue();\r\n            if (User.getKey().equals(\"Family name\")) {\r\n            }\r\n            else{\r\n                if (dataSnapshot.child(\"Users\").child(User.getKey()).child(\"type\").getValue().toString().equals(\"Child\")) {\r\n                    ListChildForTask.add(toAddChildren);\r\n                    ArrayList<Task> toAdd = new ArrayList<>();\r\n                    ArrayList<String> toAddID = new ArrayList<>();\r\n                    Iterable<DataSnapshot> Tasks = dataSnapshot.child(\"Tasks\").child(currFamilyId).getChildren();\r\n                    for (DataSnapshot Task : Tasks) {\r\n                        if (Task.child(\"belongsToUID\").getValue() != null && Task.child(\"belongsToUID\").getValue().equals(User.getKey()) && Task.child(\"status\").getValue().equals(status)) {\r\n                            String toCalc = endOrConfirmed ? \"confirmedDate\" : \"endDate\";\r\n                            long Days = DAYS.between(LocalDate.now(), LocalDate.parse(Task.child(toCalc).getValue(String.class)));\r\n                            Log.v(\"DAYS!!!!!!: \", String.valueOf(Days));\r\n                            if (days >= Math.abs(Days)) {\r\n                                Task taskToAdd = Task.getValue(Task.class);\r\n                                toAdd.add(taskToAdd);\r\n                                toAddID.add(Task.getKey());\r\n                            }\r\n                        }\r\n                    }\r\n                    ListTaskGroups.put(toAddChildren, toAdd);\r\n                    ListTaskID.put(toAddChildren, toAddID);\r\n                    childAdapter.notifyDataSetChanged();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public static void initializationCurrFamilyIdAndPermission() {\r\n        userID = mAuth.getCurrentUser().getUid();\r\n//        Log.v(\"gggggggggggg: \", dataSnapshot.getKey());\r\n        currFamilyId = dataSnapshot.child(\"Users\").child(userID).child(\"currFamilyId\").getValue(String.class);\r\n        permission = dataSnapshot.child(\"Users\").child(userID).child(\"type\").getValue(String.class);\r\n    }\r\n\r\n    public static void uploadImage(String family_key, Uri uri_image, Bitmap bitmap_image, String folder) {\r\n        //String path = \"Families/\" + family_key;\r\n        String path =folder+\"/\" + family_key;\r\n        FirebaseStorage storage = FirebaseStorage.getInstance();\r\n        StorageReference mStorageRef = storage.getReference(path);\r\n        if (uri_image != null) {\r\n            mStorageRef.putFile(uri_image).addOnCompleteListener(new OnCompleteListener<UploadTask.TaskSnapshot>() {\r\n                @Override\r\n                public void onComplete(@NonNull com.google.android.gms.tasks.Task<UploadTask.TaskSnapshot> task) {\r\n                    if (task.isSuccessful()) {\r\n                    } else {\r\n                    }\r\n                }\r\n            });\r\n        } else if (bitmap_image != null) {\r\n            ByteArrayOutputStream to_stream = new ByteArrayOutputStream();\r\n            bitmap_image.compress(Bitmap.CompressFormat.JPEG, 100, to_stream);\r\n            byte bytes[] = to_stream.toByteArray();\r\n            mStorageRef.putBytes(bytes).addOnCompleteListener(new OnCompleteListener<UploadTask.TaskSnapshot>() {\r\n                @Override\r\n                public void onComplete(@NonNull com.google.android.gms.tasks.Task<UploadTask.TaskSnapshot> task) {\r\n                    if (task.isSuccessful()) {\r\n                    } else {\r\n\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public static void createUserInFireBase(User user_to_add, String familyId, Uri uri, Bitmap bitmap) {\r\n        String key = reference.child(\"Families\").push().getKey();\r\n        user_to_add.setCurrFamilyId(key);\r\n        mAuth.createUserWithEmailAndPassword(user_to_add.getEmail(), user_to_add.getPassword()).addOnCompleteListener(new OnCompleteListener<AuthResult>() {\r\n            @Override\r\n            public void onComplete(@NonNull com.google.android.gms.tasks.Task<AuthResult> task) {\r\n                if (task.isSuccessful()) {\r\n                    userID = mAuth.getCurrentUser().getUid();\r\n                    setFamilyName(key, familyId);\r\n                    setUserToFamily(key, user_to_add.getName());\r\n                    setUserToUserFamily(key, familyId);\r\n                    setUser(user_to_add);\r\n                    uploadImage(key, uri, bitmap,\"Families\");\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public static void setScreenViewByUser(TextView name, TextView email) {\r\n        name.setText((String) dataSnapshot.child(\"Users\").child(userID).child(\"name\").getValue());\r\n        if (email != null)\r\n            email.setText((String) dataSnapshot.child(\"Users\").child(userID).child(\"email\").getValue());\r\n    }\r\n\r\n    public static void updateHomePicture(ImageButton imageButton, Context context) {\r\n\r\n        String path = \"Families/\" + getCurrFamilyId();\r\n\r\n        storage.getReference(path).getDownloadUrl().addOnCompleteListener(new OnCompleteListener<Uri>() {\r\n            @Override\r\n            public void onComplete(@NonNull com.google.android.gms.tasks.Task<Uri> task) {\r\n                if (task.isSuccessful()) {\r\n                    Uri imageUri = task.getResult();\r\n                    Picasso.get()\r\n                            .load(imageUri)\r\n                            .fit()\r\n                            .centerCrop()\r\n                            .into(imageButton);\r\n\r\n                }\r\n                else {\r\n                    imageButton.setImageResource(R.drawable.new_family);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public static void setNamesAndScores(PointsParentActivity act){\r\n        String key;\r\n        Iterable<DataSnapshot> UsersInFamily = dataSnapshot.child(\"Families\").child(currFamilyId).getChildren();\r\n        for (DataSnapshot User : UsersInFamily) {\r\n            key = User.getKey();\r\n            if (!key.equals(\"Family name\")) {\r\n                User user = dataSnapshot.child(\"Users\").child(key).getValue(User.class);\r\n                if (user.getType().equals(\"Child\")) {\r\n                    act.setChildName(user.getName(), user.getPoints());\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public static void logout(){\r\n        mAuth.signOut();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/tiptop/Database/Database2.java	(revision 40477c84d941332a5a2c7fc2574b04e1f4b782c8)
+++ app/src/main/java/com/example/tiptop/Database/Database2.java	(date 1609885215362)
@@ -70,7 +70,6 @@
         public void onComplete(DatabaseError error, DatabaseReference ref) {
             if (error != null) {
             } else {
-
             }
         }
     };
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <color name=\"purple_200\">#FFBB86FC</color>\r\n    <color name=\"purple\">#9999FF</color>\r\n    <color name=\"purple_500\">#FF6200EE</color>\r\n    <color name=\"purple_700\">#FF3700B3</color>\r\n    <color name=\"teal_200\">#FF03DAC5</color>\r\n    <color name=\"teal_700\">#FF018786</color>\r\n    <color name=\"black\">#FF000000</color>\r\n    <color name=\"white\">#FFFFFFFF</color>\r\n    <color name=\"whitePurple\">#f2e6ff</color>\r\n    <color name=\"allAppPurple\">#750099</color>\r\n    <color name=\"gray\">#f2f2f2</color>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/colors.xml	(revision 40477c84d941332a5a2c7fc2574b04e1f4b782c8)
+++ app/src/main/res/values/colors.xml	(date 1609896502605)
@@ -11,4 +11,8 @@
     <color name="whitePurple">#f2e6ff</color>
     <color name="allAppPurple">#750099</color>
     <color name="gray">#f2f2f2</color>
+    <color name="colorPrimary">#3F51B5</color>
+    <color name="colorPrimaryDark">#303F9F</color>
+    <color name="colorAccent">#FF4081</color>
+    <color name="grey_100">#F5F5F5</color>
 </resources>
\ No newline at end of file
Index: app/src/main/res/drawable/chat_rounded_rect_bg.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/chat_rounded_rect_bg.xml	(date 1609890800610)
+++ app/src/main/res/drawable/chat_rounded_rect_bg.xml	(date 1609890800610)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+
+    <corners android:radius="20dp" />
+
+    <solid android:color="@color/colorPrimary" />
+
+    <stroke
+        android:width="1dp"
+        android:color="@color/colorAccent" />
+
+</shape>
\ No newline at end of file
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\nplugins {\r\n    id 'com.android.application'\r\n}\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion \"30.0.2\"\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.tiptop\"\r\n        minSdkVersion 16\r\n        targetSdkVersion 30\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n        vectorDrawables.useSupportLibrary = true\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\napply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'\r\n\r\ndependencies {\r\n    implementation platform('com.google.firebase:firebase-bom:26.1.1')\r\n    implementation 'com.squareup.picasso:picasso:2.71828'\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n    implementation 'androidx.appcompat:appcompat:1.1.0'\r\n    implementation 'com.google.android.material:material:1.1.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'\r\n    implementation 'com.google.firebase:firebase-auth'\r\n    implementation 'com.google.firebase:firebase-database'\r\n    implementation 'com.google.firebase:firebase-storage'\r\n    implementation 'com.google.android.material:material:1.0.0'\r\n    implementation 'com.android.support:support-annotations:28.0.0'\r\n    implementation 'com.google.firebase:firebase-config:20.0.2'\r\n    testImplementation 'junit:junit:4.+'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.1'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'\r\n\r\n    //noinspection GradleCompatible\r\n    implementation 'com.android.support:cardview-v7:28.0.0'\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision 40477c84d941332a5a2c7fc2574b04e1f4b782c8)
+++ app/build.gradle	(date 1609889904114)
@@ -44,6 +44,7 @@
     implementation 'com.google.android.material:material:1.0.0'
     implementation 'com.android.support:support-annotations:28.0.0'
     implementation 'com.google.firebase:firebase-config:20.0.2'
+    implementation 'androidx.recyclerview:recyclerview:1.1.0'
     testImplementation 'junit:junit:4.+'
     androidTestImplementation 'androidx.test.ext:junit:1.1.1'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
Index: app/src/main/res/layout/item_chat_other.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/item_chat_other.xml	(date 1609897461664)
+++ app/src/main/res/layout/item_chat_other.xml	(date 1609897461664)
@@ -0,0 +1,54 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:background="?android:attr/selectableItemBackground"
+    android:clickable="true"
+    android:orientation="horizontal"
+    android:paddingBottom="10dp"
+    android:paddingEnd="10dp"
+    android:paddingStart="10dp"
+    android:paddingTop="10dp">
+
+    <TextView
+        android:id="@+id/text_view_user_alphabet"
+        android:layout_width="32dp"
+        android:layout_height="32dp"
+        android:background="@drawable/circle_accent"
+        android:gravity="center"
+        android:maxEms="1"
+        android:textAllCaps="true"
+        android:textAppearance="?android:attr/textAppearanceLarge"
+        android:textColor="@color/grey_100"
+        android:textStyle="bold"
+        tools:text="a" />
+
+    <Space
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:id="@+id/space"
+        android:layout_toRightOf="@+id/text_view_user_alphabet"/>
+
+    <TextView
+        android:id="@+id/text_view_chat_message"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginLeft="12dp"
+        android:layout_toRightOf="@+id/space"
+        android:background="@drawable/chat_rounded_rect_bg"
+        android:padding="10dp"
+        android:textAppearance="?android:attr/textAppearanceMedium"
+        android:textColor="@color/grey_100"
+        tools:text="Hello mate ! \ntest" />
+
+    <TextView
+        android:layout_below="@+id/text_view_chat_message"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+
+        android:textAppearance="?android:attr/textAppearanceMedium"
+        android:text="Medium Text"
+        android:id="@+id/receiverMsgTime"
+        android:layout_gravity="right" />
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/tiptop/Objects/Chat.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/tiptop/Objects/Chat.java	(date 1609889831023)
+++ app/src/main/java/com/example/tiptop/Objects/Chat.java	(date 1609889831023)
@@ -0,0 +1,25 @@
+package com.example.tiptop.Objects;
+
+import java.io.Serializable;
+
+public class Chat implements Serializable {
+    public String sender;
+    public String receiver;
+    public String senderUid;
+    public String receiverUid;
+    public String message;
+    public long timestamp;
+
+    public Chat(){
+
+    }
+
+    public Chat(String sender, String receiver, String senderUid, String receiverUid, String message, long timestamp) {
+        this.sender = sender;
+        this.receiver = receiver;
+        this.senderUid = senderUid;
+        this.receiverUid = receiverUid;
+        this.message = message;
+        this.timestamp = timestamp;
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/tiptop/Adapters/ChatAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/tiptop/Adapters/ChatAdapter.java	(date 1609890761532)
+++ app/src/main/java/com/example/tiptop/Adapters/ChatAdapter.java	(date 1609890761532)
@@ -0,0 +1,118 @@
+package com.example.tiptop.Adapters;
+
+import android.text.TextUtils;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.example.tiptop.Objects.Chat;
+import com.example.tiptop.R;
+import com.google.firebase.auth.FirebaseAuth;
+
+import java.text.SimpleDateFormat;
+import java.util.Date;
+import java.util.List;
+
+public class ChatAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> {
+
+    private static final int VIEW_TYPE_ME = 1;
+    private static final int VIEW_TYPE_OTHER = 2;
+    List<Chat> mChats;
+
+    public ChatAdapter(List<Chat> mChats) {
+        this.mChats = mChats;
+    }
+
+    @Override
+    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+        LayoutInflater layoutInflater = LayoutInflater.from(parent.getContext());
+        RecyclerView.ViewHolder viewHolder = null;
+        switch (viewType) {
+            case VIEW_TYPE_ME:
+                View viewChatMine = layoutInflater.inflate(R.layout.item_chat_mine, parent, false);
+                viewHolder = new MyChatViewHolder(viewChatMine);
+                break;
+            case VIEW_TYPE_OTHER:
+                View viewChatOther = layoutInflater.inflate(R.layout.item_chat_other, parent, false);
+                viewHolder = new OtherChatViewHolder(viewChatOther);
+                break;
+        }
+        return viewHolder;
+    }
+
+    @Override
+    public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
+        if (TextUtils.equals(mChats.get(position).senderUid,
+                FirebaseAuth.getInstance().getCurrentUser().getUid())) {
+            configureMyChatViewHolder((MyChatViewHolder) holder, position);
+        } else {
+            configureOtherChatViewHolder((OtherChatViewHolder) holder, position);
+        }
+    }
+
+
+    private void configureMyChatViewHolder(final MyChatViewHolder myChatViewHolder, int position) {
+        Chat chat = mChats.get(position);
+        SimpleDateFormat sfd = new SimpleDateFormat("hh:mm a");
+        String date=sfd.format(new Date(chat.timestamp).getTime());
+        myChatViewHolder.senderMsgTime.setText(date);
+
+
+    }
+
+    private void configureOtherChatViewHolder(final OtherChatViewHolder otherChatViewHolder, int position) {
+        final Chat chat = mChats.get(position);
+        SimpleDateFormat sfd = new SimpleDateFormat("hh:mm a");
+        String date=sfd.format(new Date(chat.timestamp).getTime());
+        otherChatViewHolder.receiverMsgTime.setText(date);
+
+    }
+
+    @Override
+    public int getItemCount() {
+        return 0;
+    }
+
+
+    @Override
+    public int getItemViewType(int position) {
+        if (TextUtils.equals(mChats.get(position).senderUid,
+                FirebaseAuth.getInstance().getCurrentUser().getUid())) {
+            return VIEW_TYPE_ME;
+        } else {
+            return VIEW_TYPE_OTHER;
+        }
+    }
+
+    private static class MyChatViewHolder extends RecyclerView.ViewHolder {
+        private TextView txtChatMessage, txtUserAlphabet;
+        private TextView senderMsgTime;
+
+        public MyChatViewHolder(View itemView) {
+            super(itemView);
+            txtChatMessage = (TextView) itemView.findViewById(R.id.text_view_chat_message);
+            txtUserAlphabet = (TextView) itemView.findViewById(R.id.text_view_user_alphabet);
+            senderMsgTime=(TextView) itemView.findViewById(R.id.senderMsgTime);
+        }
+    }
+
+    private static class OtherChatViewHolder extends RecyclerView.ViewHolder {
+        private TextView txtChatMessage, txtUserAlphabet;
+        private TextView receiverMsgTime;
+
+
+
+
+        public OtherChatViewHolder(View itemView) {
+            super(itemView);
+            txtChatMessage = (TextView) itemView.findViewById(R.id.text_view_chat_message);
+            txtUserAlphabet = (TextView) itemView.findViewById(R.id.text_view_user_alphabet);
+            receiverMsgTime=(TextView) itemView.findViewById(R.id.receiverMsgTime);
+
+
+        }
+    }
+}
Index: app/src/main/res/layout/item_chat_mine.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/item_chat_mine.xml	(date 1609897461657)
+++ app/src/main/res/layout/item_chat_mine.xml	(date 1609897461657)
@@ -0,0 +1,59 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:background="?android:attr/selectableItemBackground"
+    android:clickable="true"
+    android:gravity="center_vertical"
+    android:orientation="horizontal"
+    android:paddingBottom="10dp"
+    android:paddingEnd="10dp"
+    android:paddingStart="10dp"
+    android:paddingTop="10dp">
+
+    <TextView
+        android:id="@+id/text_view_chat_message"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="64dp"
+        android:layout_marginLeft="64dp"
+        android:layout_marginEnd="-4dp"
+        android:layout_marginRight="-4dp"
+        android:layout_toStartOf="@+id/text_view_user_alphabet"
+        android:layout_toLeftOf="@+id/text_view_user_alphabet"
+        android:background="@drawable/chat_rounded_rect_bg"
+        android:padding="10dp"
+        android:textAppearance="?android:attr/textAppearanceMedium"
+        android:textColor="@color/grey_100"
+        tools:text="Noice man !" />
+
+    <TextView
+        android:id="@+id/text_view_user_alphabet"
+        android:layout_width="32dp"
+        android:layout_height="32dp"
+        android:layout_alignParentEnd="true"
+        android:layout_marginStart="16dp"
+        android:background="@drawable/circle_accent"
+        android:gravity="center"
+        android:maxEms="1"
+        android:textAllCaps="true"
+        android:textAppearance="?android:attr/textAppearanceLarge"
+        android:textColor="@color/grey_100"
+        android:textStyle="bold"
+        tools:text="a"
+        android:layout_alignParentRight="true"
+        android:layout_marginLeft="16dp" />
+
+
+    <TextView
+        android:layout_below="@+id/text_view_chat_message"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_alignParentRight="true"
+        android:textAppearance="?android:attr/textAppearanceMedium"
+        android:text="Medium Text"
+        android:id="@+id/senderMsgTime"
+        android:layout_gravity="right" />
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/res/drawable/circle_accent.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/circle_accent.xml	(date 1609890800611)
+++ app/src/main/res/drawable/circle_accent.xml	(date 1609890800611)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="oval">
+
+    <size
+        android:width="@dimen/user_icon_width"
+        android:height="@dimen/user_icon_height" />
+
+    <solid android:color="@color/colorPrimary" />
+
+</shape>
\ No newline at end of file
Index: app/src/main/java/com/example/tiptop/Chat/ChatActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/tiptop/Chat/ChatActivity.java	(date 1609897461661)
+++ app/src/main/java/com/example/tiptop/Chat/ChatActivity.java	(date 1609897461661)
@@ -0,0 +1,33 @@
+package com.example.tiptop.Chat;
+
+import android.os.Bundle;
+import android.view.View;
+import android.widget.Toolbar;
+
+import androidx.appcompat.app.AppCompatActivity;
+
+import com.example.tiptop.R;
+import com.google.android.material.floatingactionbutton.FloatingActionButton;
+import com.google.android.material.snackbar.Snackbar;
+
+
+public class ChatActivity extends AppCompatActivity {
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_chat);
+//        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+//        setSupportActionBar(toolbar);
+//
+//        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);
+//        fab.setOnClickListener(new View.OnClickListener() {
+//            @Override
+//            public void onClick(View view) {
+//                Snackbar.make(view, "Replace with your own action", Snackbar.LENGTH_LONG)
+//                        .setAction("Action", null).show();
+//            }
+//        });
+    }
+
+}
