Index: app/src/main/java/com/example/tiptop/Database/Database.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.tiptop.Database;\r\n\r\nimport android.graphics.Bitmap;\r\nimport android.net.Uri;\r\nimport android.util.Log;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.TableLayout;\r\nimport android.widget.TableRow;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\n\r\nimport com.example.tiptop.Adapters.TaskToChildExtendListAdapter;\r\nimport com.example.tiptop.Objects.Task;\r\nimport com.example.tiptop.Objects.User;\r\nimport com.example.tiptop.Points.PointsParentActivity;\r\nimport com.example.tiptop.PoolTasks.TaskInfoParentActivity;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\n\r\npublic class Database {\r\n\r\n    private static FirebaseStorage storage = FirebaseStorage.getInstance();\r\n    private static FirebaseDatabase db = FirebaseDatabase.getInstance();\r\n    private static FirebaseAuth mAuth = FirebaseAuth.getInstance();\r\n    private static DatabaseReference reference = db.getReference();\r\n    private static String userID;\r\n    private static String currFamilyId;\r\n    private static String permission;\r\n    private static String TitleSpinnerOfBelongChild;\r\n\r\n    public static final String USERS_ROOT = \"Users\", FAMILIES_ROOT = \"Families\", TASKS_ROOT = \"Tasks\", USERRFAMILIES_ROOT = \"UserFamilies\";\r\n\r\n    public static boolean setStatus(String taskID, String Status) {\r\n        try {\r\n            reference.child(\"Tasks\").child(currFamilyId).child(taskID).child(\"status\").setValue(Status);\r\n        } catch (Exception e) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public static boolean setConfirmedDate(String taskID) {\r\n        try {\r\n            int year = Calendar.getInstance().get(Calendar.YEAR);\r\n            int month = Calendar.getInstance().get(Calendar.MONTH)+1;\r\n            int day = Calendar.getInstance().get(Calendar.DAY_OF_MONTH);\r\n            String zeroMonth = \"\";\r\n            String zeroDay = \"\";\r\n            if (month<10) zeroMonth = \"0\";\r\n            if (day < 10) zeroDay = \"0\";\r\n            String currentDate = \"\" + year + \"-\" + zeroMonth + month + \"-\" +zeroDay + day;\r\n            reference.child(\"Tasks\").child(currFamilyId).child(taskID).child(\"confirmedDate\").setValue(currentDate);\r\n        } catch (Exception e) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public static boolean setbelongsToUID(String taskID, String uid) {\r\n        try {\r\n            if (uid != null)\r\n                reference.child(\"Tasks\").child(currFamilyId).child(taskID).child(\"status\").setValue(uid);\r\n            else\r\n                reference.child(\"Tasks\").child(currFamilyId).child(taskID).child(\"belongsToUID\").removeValue();\r\n        } catch (Exception e) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public static boolean setFamilyName(String key, String familyName) {\r\n        try {\r\n            reference.child(\"Families\").child(key).child(\"Family name\").setValue(familyName);\r\n        } catch (Exception e) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public static boolean setUserToFamily(String familyKey, String userName) {\r\n        try {\r\n            reference.child(\"Families\").child(familyKey).child(userID).setValue(userName);\r\n        } catch (Exception e) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public static boolean setUserToUserFamily(String familyKey, String familyName) {\r\n        try {\r\n            reference.child(\"UserFamilies\").child(userID).child(familyKey).setValue(familyName);\r\n        } catch (Exception e) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public static boolean setUser(User userToAdd) {\r\n        try {\r\n            reference.child(\"Users\").child(userID).setValue(userToAdd);\r\n        } catch (Exception e) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    public static boolean updateTaskListFromDB(ArrayList<Task> toUpdate, ArrayList<String> idToUpdate, String status, ArrayAdapter<Task> mTaskListAdapter) {\r\n        try {\r\n            reference.child(\"Tasks\").child(currFamilyId).addValueEventListener(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                    toUpdate.clear();\r\n                    idToUpdate.clear();\r\n                    for (DataSnapshot Snapshot : snapshot.getChildren()) {\r\n                        if (permission.equals(\"Parent\") && Snapshot.child(\"status\").getValue().equals(status)) {\r\n                            Task toAdd = Snapshot.getValue(Task.class);\r\n                            toUpdate.add(toAdd);\r\n                            idToUpdate.add(Snapshot.getKey());\r\n                        } else if (permission.equals(\"Child\") && Snapshot.child(\"belongsToUID\").getValue() != null &&\r\n                                Snapshot.child(\"belongsToUID\").getValue().equals(userID) && Snapshot.child(\"status\").getValue().equals(status)) {\r\n                            Task toAdd = Snapshot.getValue(Task.class);\r\n                            toUpdate.add(toAdd);\r\n                            idToUpdate.add(Snapshot.getKey());\r\n                        }\r\n                    }\r\n                    mTaskListAdapter.notifyDataSetChanged();\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                }\r\n            });\r\n        } catch (Exception e) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    public static boolean updateExpandableTaskListFromDB(ArrayList<String> ListChildForTask, HashMap<String, ArrayList<Task>> ListTaskGroups, HashMap<String, ArrayList<String>> ListTaskID, String status, TaskToChildExtendListAdapter childAdapter) {\r\n        try {\r\n            reference.child(\"Families\").child(currFamilyId).addValueEventListener(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                    ListChildForTask.clear();\r\n                    for (DataSnapshot ds : snapshot.getChildren()) {\r\n                        String toAddChildren = (String) ds.getValue();\r\n                        reference.child(\"Users\").child(ds.getKey()).addValueEventListener(new ValueEventListener() {\r\n                            @Override\r\n                            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                if (snapshot.child(\"type\").getValue() != null && snapshot.child(\"type\").getValue().toString().equals(\"Child\")) {\r\n                                    ListChildForTask.add(toAddChildren);\r\n                                    ArrayList<Task> toAdd = new ArrayList<>();\r\n                                    ArrayList<String> toAddID = new ArrayList<>();\r\n                                    reference.child(\"Tasks\").child(currFamilyId).addValueEventListener(new ValueEventListener() {\r\n                                        @Override\r\n                                        public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                            toAdd.clear();\r\n                                            toAddID.clear();\r\n                                            for (DataSnapshot ds1 : snapshot.getChildren()) {\r\n                                                if (ds1.child(\"belongsToUID\").getValue() != null && ds1.child(\"belongsToUID\").getValue().equals(ds.getKey()) && ds1.child(\"status\").getValue().equals(status)) {\r\n                                                    Task taskToAdd = ds1.getValue(Task.class);\r\n                                                    toAdd.add(taskToAdd);\r\n                                                    toAddID.add(ds1.getKey());\r\n                                                }\r\n                                            }\r\n                                            ListTaskGroups.put(toAddChildren, toAdd);\r\n                                            ListTaskID.put(toAddChildren, toAddID);\r\n                                            System.out.println(\"ListChildForTask1\" + ListChildForTask);\r\n                                            System.out.println(\"ListTaskGroups1\" + ListTaskGroups);\r\n                                            childAdapter.notifyDataSetChanged();\r\n                                        }\r\n\r\n                                        @Override\r\n                                        public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                            @Override\r\n                            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                }\r\n            });\r\n        } catch (Exception e) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public static boolean initializationCurrFamilyIdAndPermission() {\r\n        userID = mAuth.getCurrentUser().getUid();\r\n        try {\r\n            reference.child(\"Users\").child(userID).child(\"currFamilyId\").addListenerForSingleValueEvent(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                    currFamilyId = (String) snapshot.getValue();\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                }\r\n            });\r\n            reference.child(\"Users\").child(userID).child(\"type\").addListenerForSingleValueEvent(new ValueEventListener() {\r\n                @Override\r\n                public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                    permission = (String) snapshot.getValue();\r\n                }\r\n\r\n                @Override\r\n                public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                }\r\n            });\r\n//            reference.child(\"Users\").child(userID).addListenerForSingleValueEvent(new ValueEventListener() {\r\n//                @Override\r\n//                public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n//                    Log.v(\"onDataChange\", \"**************\");\r\n//                    for (DataSnapshot ds : snapshot.getChildren()) {\r\n//                        Log.v(\"onFor\", \"**************\");\r\n//                        if (ds.getKey().equals(\"currFamilyId\")) {\r\n//                            currFamilyId = (String) ds.getValue();\r\n//                        }\r\n//                        if (ds.getKey().equals(\"type\")) {\r\n//                            permission = (String) ds.getValue();\r\n//                            Log.v(\"permision: \", permission);\r\n//                        }\r\n//                    }\r\n//                }\r\n//\r\n//                @Override\r\n//                public void onCancelled(@NonNull DatabaseError error) {\r\n//\r\n//                }\r\n//            });\r\n        } catch (Exception e) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    public static boolean setCurrFamilyId(String CurrFamilyId) {\r\n        try {\r\n            currFamilyId = CurrFamilyId;\r\n            reference.child(\"Users\").child(userID).child(\"currFamilyId\").setValue(CurrFamilyId);\r\n        } catch (Exception e) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public static String getCurrFamilyId() {\r\n        return currFamilyId;\r\n    }\r\n\r\n    public static String getPermission() {\r\n        return permission;\r\n    }\r\n\r\n    public static void createUserInFireBase(User user_to_add, String familyId, Uri uri, Bitmap bitmap) {\r\n        String key = reference.child(\"Families\").push().getKey();\r\n        user_to_add.setCurrFamilyId(key);\r\n        mAuth.createUserWithEmailAndPassword(user_to_add.getEmail(), user_to_add.getPassword()).addOnCompleteListener(new OnCompleteListener<AuthResult>() {\r\n            @Override\r\n            public void onComplete(@NonNull com.google.android.gms.tasks.Task<AuthResult> task) {\r\n                if (task.isSuccessful()) {\r\n                    userID = mAuth.getCurrentUser().getUid();\r\n                    setFamilyName(key, familyId);\r\n                    setUserToFamily(key, user_to_add.getName());\r\n                    setUserToUserFamily(key, familyId);\r\n                    setUser(user_to_add);\r\n                    uploadImage(key, uri, bitmap);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public static void uploadImage(String family_key, Uri uri_image, Bitmap bitmap_image) {\r\n        String path = \"Families/\" + family_key;\r\n        FirebaseStorage storage = FirebaseStorage.getInstance();\r\n        StorageReference mStorageRef = storage.getReference(path);\r\n        if (uri_image != null) {\r\n            mStorageRef.putFile(uri_image).addOnCompleteListener(new OnCompleteListener<UploadTask.TaskSnapshot>() {\r\n                @Override\r\n                public void onComplete(@NonNull com.google.android.gms.tasks.Task<UploadTask.TaskSnapshot> task) {\r\n                    if (task.isSuccessful()) {\r\n                    } else {\r\n                    }\r\n                }\r\n            });\r\n        } else if (bitmap_image != null) {\r\n            ByteArrayOutputStream to_stream = new ByteArrayOutputStream();\r\n            bitmap_image.compress(Bitmap.CompressFormat.JPEG, 100, to_stream);\r\n            byte bytes[] = to_stream.toByteArray();\r\n            mStorageRef.putBytes(bytes).addOnCompleteListener(new OnCompleteListener<UploadTask.TaskSnapshot>() {\r\n                @Override\r\n                public void onComplete(@NonNull com.google.android.gms.tasks.Task<UploadTask.TaskSnapshot> task) {\r\n                    if (task.isSuccessful()) {\r\n                    } else {\r\n\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    public static void updateListOfChildFromDB(ArrayList<String> allKeys, ArrayList<String> allKids, ArrayAdapter adapter) {\r\n        reference.child(\"Families\").child(currFamilyId).addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                allKids.clear();\r\n                allKeys.clear();\r\n                allKids.add(\"Not Associated\");\r\n                for (DataSnapshot ds : snapshot.getChildren()) {\r\n                    String toAddChildren = (String) ds.getValue();\r\n                    String toAddKey = (String) ds.getKey();\r\n                    reference.child(\"Users\").child(toAddKey).addValueEventListener(new ValueEventListener() {\r\n                        @Override\r\n                        public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n\r\n                            if (snapshot.child(\"type\").getValue() != null && snapshot.child(\"type\").getValue().toString().equals(\"Child\")) {\r\n                                allKeys.add(toAddKey);\r\n                                allKids.add(toAddChildren);\r\n                            }\r\n                            adapter.notifyDataSetChanged();\r\n                        }\r\n\r\n                        @Override\r\n                        public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    public static void addTaskToDB(String key, Task toAddTask) {\r\n        reference.child(\"Tasks\").child(currFamilyId).child(key).setValue(toAddTask);\r\n    }\r\n\r\n    public static String getKeyForNewTask() {\r\n        return reference.child(\"Tasks\").child(currFamilyId).push().getKey();\r\n    }\r\n\r\n    public static boolean setTaskDesctiption(String taskID, String descriptionToUpdate) {\r\n        try {\r\n            reference.child(\"Tasks\").child(currFamilyId).child(taskID).child(\"description\").setValue(descriptionToUpdate);\r\n        } catch (Exception e) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public static boolean setTaskName(String taskID, String nameToUpdate) {\r\n        try {\r\n            reference.child(\"Tasks\").child(currFamilyId).child(taskID).child(\"nameTask\").setValue(nameToUpdate);\r\n        } catch (Exception e) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public static boolean setTaskBonus(String taskID, int bonusToUpdate) {\r\n        try {\r\n            reference.child(\"Tasks\").child(currFamilyId).child(taskID).child(\"bonusScore\").setValue(bonusToUpdate);\r\n        } catch (Exception e) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public static String getAndSetTitleSpinnerOfBelongChild(String BelongsToUID) {\r\n        reference.child(\"Users\").child(BelongsToUID).child(\"name\").addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                TitleSpinnerOfBelongChild = snapshot.getValue().toString();\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n        return TitleSpinnerOfBelongChild;\r\n    }\r\n\r\n    public static void updateListOfFamilyFromDB(ArrayList<String> allKeys, ArrayList<String> allFamilies, ArrayAdapter adapter) {\r\n        //Updating the spinner\r\n        Log.d(\"user\", \"updateListOfFamilyFromDB: userID \" + userID);\r\n        reference.child(\"UserFamilies\").child(userID).addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                allFamilies.clear();\r\n                allKeys.clear();\r\n                for (DataSnapshot ds : snapshot.getChildren()) {\r\n                    String toAddFamiliy = (String) ds.getValue();\r\n                    String toAddKey = ds.getKey();\r\n                    allFamilies.add(toAddFamiliy);\r\n                    allKeys.add(toAddKey);\r\n                }\r\n                Log.d(\"database:\", \"onDataChange:families: \" + allFamilies);\r\n                Log.d(\"database:\", \"onDataChange:families: \" + allKeys);\r\n\r\n                int pos = allKeys.indexOf(currFamilyId);\r\n                if (pos > 0) {\r\n                    String Family = allFamilies.get(pos);\r\n                    allFamilies.remove(Family);\r\n                    allFamilies.add(0, Family);\r\n\r\n                    allKeys.remove(currFamilyId);\r\n                    allKeys.add(0, currFamilyId);\r\n                }\r\n                adapter.notifyDataSetChanged();\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    public static void setScreenViewByUser(TextView name, TextView email) {\r\n        reference.child(\"Users\").child(userID).addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                String key;\r\n                String value;\r\n\r\n                for (DataSnapshot ds : snapshot.getChildren()) {\r\n\r\n                    key = ds.getKey();\r\n                    value = ds.getValue().toString();\r\n\r\n                    if (key.equals(\"name\")) {\r\n                        name.setText(value);\r\n                    } else if (email != null && key.equals(\"email\")) {\r\n                        email.setText(value);\r\n                    }\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    public static void setNumOfPoints(TextView numOfPoints, ArrayList<Integer>sumOfPoints) {\r\n        reference.child(\"Tasks\").child(currFamilyId).addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                for (DataSnapshot ds : snapshot.getChildren()) {\r\n\r\n                    if (ds.child(\"belongsToUID\").getValue().equals(userID) && ds.child(\"status\").getValue().equals(\"Confirmed\")) {\r\n                        sumOfPoints.set(0,sumOfPoints.get(0)+Integer.parseInt(ds.child(\"bonusScore\").getValue().toString()));\r\n                    }\r\n                }\r\n                numOfPoints.setText(String.valueOf(sumOfPoints.get(0)));\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    public static void addPointsToChild (Task conformedTask){\r\n        long currPoint;\r\n        reference.child(\"Users\").child(conformedTask.getBelongsToUID()).addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                snapshot.child(\"points\").getRef().setValue(snapshot.child(\"points\").getValue(long.class) + conformedTask.getBonusScore());\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    public static void getPoints (TextView numOfPoints){\r\n        reference.child(\"Users\").child(userID).child(\"points\").addListenerForSingleValueEvent(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                numOfPoints.setText(String.valueOf(snapshot.getValue(long.class)));\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    public static void setNamesAndScores(PointsParentActivity act){\r\n\r\n        reference.child(\"Families\").child(currFamilyId).addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                String key;\r\n\r\n                for (DataSnapshot ds : snapshot.getChildren()) {\r\n                    key = ds.getKey();\r\n                    if(!key.equals(\"Family name\")){\r\n                        reference.child(\"Users\").child(key).addValueEventListener(new ValueEventListener() {\r\n                            @Override\r\n                            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                                User user = snapshot.getValue(User.class);\r\n                                Log.v(\"user**********\",user.toString());\r\n                                if(user.getType().equals(\"Child\")){\r\n                                    act.setChildName(user.getName(), user.getPoints());\r\n                                }\r\n                            }\r\n\r\n                            @Override\r\n                            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n\r\n            }\r\n        });\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/tiptop/Database/Database.java	(revision 25e1d717659400f0d9c4f54dfd52c054b378d08c)
+++ app/src/main/java/com/example/tiptop/Database/Database.java	(date 1609780533580)
@@ -1,12 +1,16 @@
 package com.example.tiptop.Database;
 
+import android.content.Context;
 import android.graphics.Bitmap;
 import android.net.Uri;
 import android.util.Log;
 import android.widget.ArrayAdapter;
+import android.widget.ImageButton;
+import android.widget.ImageView;
 import android.widget.TableLayout;
 import android.widget.TableRow;
 import android.widget.TextView;
+import android.widget.Toast;
 
 import androidx.annotation.NonNull;
 
@@ -15,6 +19,7 @@
 import com.example.tiptop.Objects.User;
 import com.example.tiptop.Points.PointsParentActivity;
 import com.example.tiptop.PoolTasks.TaskInfoParentActivity;
+import com.example.tiptop.R;
 import com.google.android.gms.tasks.OnCompleteListener;
 import com.google.firebase.auth.AuthResult;
 import com.google.firebase.auth.FirebaseAuth;
@@ -27,6 +32,7 @@
 import com.google.firebase.storage.FirebaseStorage;
 import com.google.firebase.storage.StorageReference;
 import com.google.firebase.storage.UploadTask;
+import com.squareup.picasso.Picasso;
 
 import java.io.ByteArrayOutputStream;
 import java.util.ArrayList;
@@ -121,7 +127,6 @@
         return true;
     }
 
-
     public static boolean updateTaskListFromDB(ArrayList<Task> toUpdate, ArrayList<String> idToUpdate, String status, ArrayAdapter<Task> mTaskListAdapter) {
         try {
             reference.child("Tasks").child(currFamilyId).addValueEventListener(new ValueEventListener() {
@@ -155,7 +160,6 @@
         return true;
     }
 
-
     public static boolean updateExpandableTaskListFromDB(ArrayList<String> ListChildForTask, HashMap<String, ArrayList<Task>> ListTaskGroups, HashMap<String, ArrayList<String>> ListTaskID, String status, TaskToChildExtendListAdapter childAdapter) {
         try {
             reference.child("Families").child(currFamilyId).addValueEventListener(new ValueEventListener() {
@@ -217,13 +221,14 @@
         return true;
     }
 
-    public static boolean initializationCurrFamilyIdAndPermission() {
+    public static boolean initializationCurrFamilyIdAndPermission(ImageButton IB,Context context) {
         userID = mAuth.getCurrentUser().getUid();
         try {
             reference.child("Users").child(userID).child("currFamilyId").addListenerForSingleValueEvent(new ValueEventListener() {
                 @Override
                 public void onDataChange(@NonNull DataSnapshot snapshot) {
                     currFamilyId = (String) snapshot.getValue();
+                    updateHomePic(IB,context);
                 }
 
                 @Override
@@ -269,7 +274,6 @@
         return true;
     }
 
-
     public static boolean setCurrFamilyId(String CurrFamilyId) {
         try {
             currFamilyId = CurrFamilyId;
@@ -335,7 +339,6 @@
         }
     }
 
-
     public static void updateListOfChildFromDB(ArrayList<String> allKeys, ArrayList<String> allKids, ArrayAdapter adapter) {
         reference.child("Families").child(currFamilyId).addValueEventListener(new ValueEventListener() {
             @Override
@@ -571,4 +574,35 @@
             }
         });
     }
+
+    public static void updateHomePic(ImageButton homeImage, Context context) {
+
+        String path = "Families/" + currFamilyId;
+        StorageReference sRef = FirebaseStorage.getInstance().getReference(path);
+
+        boolean existFamilyImage = sRef.getDownloadUrl().isSuccessful();
+
+        if(existFamilyImage) {
+            sRef.getDownloadUrl().addOnCompleteListener(new OnCompleteListener<Uri>() {
+                @Override
+                public void onComplete(@NonNull com.google.android.gms.tasks.Task<Uri> task) {
+
+                    if (task.isSuccessful()) {
+                        Uri imageUri = task.getResult();
+                        Picasso.get()
+                                .load(imageUri)
+                                .fit()
+                                .centerCrop()
+                                .into(homeImage);
+                    } else {
+                        Toast.makeText(context, "Failed to load image", Toast.LENGTH_LONG).show();
+                    }
+                }
+            });
+        }
+        else{
+            homeImage.setImageResource(R.drawable.new_family);
+        }
+
+    }
 }
Index: app/src/main/java/com/example/tiptop/LogInAndSignUp/HomeActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.tiptop.LogInAndSignUp;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ImageButton;\r\nimport android.widget.Spinner;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport com.example.tiptop.ChatActivity;\r\nimport com.example.tiptop.FollowUp.FollowUpChildActivity;\r\nimport com.example.tiptop.FollowUp.FollowUpParentActivity;\r\nimport com.example.tiptop.History.HistoryParentActivity;\r\nimport com.example.tiptop.Points.PointsChildActivity;\r\nimport com.example.tiptop.Points.PointsParentActivity;\r\nimport com.example.tiptop.PoolTasks.PoolTasksChildActivity;\r\nimport com.example.tiptop.PoolTasks.PoolTasksParentActivity;\r\nimport com.example.tiptop.R;\r\nimport com.example.tiptop.Settings.SettingChildActivity;\r\nimport com.example.tiptop.Settings.SettingParentActivity;\r\nimport com.example.tiptop.StatisticsActivity;\r\n\r\nimport java.util.ArrayList;\r\n\r\nimport static com.example.tiptop.Database.Database.getCurrFamilyId;\r\nimport static com.example.tiptop.Database.Database.getPermission;\r\nimport static com.example.tiptop.Database.Database.initializationCurrFamilyIdAndPermission;\r\nimport static com.example.tiptop.Database.Database.setCurrFamilyId;\r\nimport static com.example.tiptop.Database.Database.updateListOfFamilyFromDB;\r\nimport static com.example.tiptop.Database.Database.uploadImage;\r\n\r\npublic class HomeActivity extends AppCompatActivity  {\r\n\r\n    //Variables that will contain all the buttons\r\n    private ImageButton imageButton;\r\n    private androidx.cardview.widget.CardView followUp;\r\n    private androidx.cardview.widget.CardView Statistics;\r\n    private androidx.cardview.widget.CardView chat;\r\n    private androidx.cardview.widget.CardView Tasks;\r\n    private androidx.cardview.widget.CardView history;\r\n    private androidx.cardview.widget.CardView points;\r\n    private Spinner SpinnerFamily;\r\n\r\n    //Variables to be used for the spinner\r\n    private ArrayList <String> allKeys;\r\n    private ArrayList <String> allFamilies;\r\n    private ArrayAdapter adapter;\r\n    public String spinnerTitle;\r\n\r\n    private Bitmap bitmapImage =null;\r\n    private Uri uriImage = null;\r\n    private static final int CAMERA_PHOTO = 1;\r\n    private static final int GALLERY_PHOTO = 2;\r\n    private static final String TAG = \"HomeActivity\";\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_home);\r\n        initializationFromXML();\r\n        initializationCurrFamilyIdAndPermission();\r\n        initializeClassVariables();\r\n        spinerActive();\r\n        ActivateAllButtons();\r\n    }\r\n\r\n    private void initializationFromXML() {\r\n        //Set the followUp button\r\n        followUp = findViewById(R.id.followUp);\r\n        //Set the Statistics button\r\n        Statistics = findViewById(R.id.statistics);\r\n        //Set the chat button\r\n        chat = findViewById(R.id.chat);\r\n        //Set the Tasks button\r\n        Tasks = findViewById(R.id.tasks);\r\n        //Set the history button\r\n        history = findViewById(R.id.history);\r\n        //Set the points button\r\n        points = findViewById(R.id.points);\r\n        //Set the ImageButton button\r\n        imageButton = (ImageButton)findViewById(R.id.imageButton);\r\n        //Set the SpinnerFamily Spinner\r\n        SpinnerFamily = (Spinner)findViewById(R.id.SpinnerFamily);\r\n    }\r\n\r\n    private void initializeClassVariables() {\r\n        spinnerTitle = getCurrFamilyId();\r\n        //Initialize the 2 lists that will save all the last names and all the keys respectively.\r\n        allKeys = new ArrayList<>();\r\n        allFamilies = new ArrayList<>();\r\n    }\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        getMenuInflater().inflate(R.menu.home_menu, menu);\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n\r\n        int id = item.getItemId();\r\n\r\n        if(id==R.id.settingItem){\r\n            Intent i;\r\n\r\n            if(getPermission().equals(\"Parent\")){\r\n                i = new Intent(HomeActivity.this, SettingParentActivity.class);\r\n            }\r\n            else {\r\n                i = new Intent(HomeActivity.this, SettingChildActivity.class);\r\n            }\r\n            startActivity(i);\r\n        }\r\n\r\n        return super.onOptionsItemSelected(item);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    /**\r\n     * The function activates the spinner component, meaning it fills in the spinner all\r\n     * the families to which the user belongs by retrieving what DB. And when you click on another last\r\n     * name the currFamilyId changes in the title and in DB and this is what is transmitted on the Internet.\r\n     */\r\n    private void spinerActive() {\r\n\r\n        //Connecting the list to the view\r\n        adapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_dropdown_item, allFamilies);\r\n        SpinnerFamily.setAdapter(adapter);\r\n\r\n        updateListOfFamilyFromDB(allKeys,allFamilies,adapter);\r\n\r\n        //Defines the functionality of a last name click\r\n        SpinnerFamily.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                spinnerTitle = allFamilies.get(position);\r\n                setCurrFamilyId(allKeys.get(position));\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n            }\r\n        });\r\n    }\r\n\r\n    private void ActivateAllButtons() {\r\n\r\n        //Moves to the followUp activity\r\n        followUp.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent i;\r\n                if(getPermission().equals(\"Parent\")){\r\n                    i = new Intent(v.getContext(), FollowUpParentActivity.class);\r\n                }\r\n                else if (getPermission().equals(\"Child\")) {\r\n                    i = new Intent(v.getContext(), FollowUpChildActivity.class);\r\n                }\r\n                else return;\r\n                startActivity(i);\r\n            }\r\n        });\r\n\r\n        //Moves to the Statistics activity\r\n        Statistics.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent i = new Intent(v.getContext(), StatisticsActivity.class);\r\n                startActivity(i);\r\n            }\r\n        });\r\n\r\n        //Moves to the chat activity\r\n        chat.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent i = new Intent(v.getContext(), ChatActivity.class);\r\n                startActivity(i);\r\n            }\r\n        });\r\n\r\n        //Moves to the Tasks activity\r\n        Tasks.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent i;\r\n                if (getPermission().equals(\"Parent\")){\r\n                    i = new Intent(v.getContext(), PoolTasksParentActivity.class);\r\n                }\r\n\r\n                else if (getPermission().equals(\"Child\")){\r\n                    i = new Intent(v.getContext(), PoolTasksChildActivity.class);\r\n                }\r\n                else return;\r\n                startActivity(i);\r\n            }\r\n        });\r\n\r\n        //Moves to the history activity\r\n        history.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent i = new Intent(v.getContext(), HistoryParentActivity.class);\r\n                startActivity(i);\r\n            }\r\n        });\r\n\r\n        //Moves to the points activity\r\n        points.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent i;\r\n                if(getPermission().equals(\"Parent\")){\r\n                    i = new Intent(v.getContext(), PointsParentActivity.class);\r\n                }\r\n                else if (getPermission().equals(\"Child\")) {\r\n                    i = new Intent(v.getContext(), PointsChildActivity.class);\r\n                }\r\n                else return;\r\n                startActivity(i);\r\n            }\r\n        });\r\n\r\n        //Moves to the ImageButton activity\r\n        imageButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                setNewImagwButton();\r\n                uploadImage(getCurrFamilyId(),uriImage,bitmapImage);\r\n            }\r\n        });\r\n    }\r\n\r\n    private void setNewImagwButton(){\r\n        imageButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                final CharSequence[] options = {\"Take photo from camera\", \"Choose photo from Gallery\", \"Cancel\"};\r\n                AlertDialog.Builder builder = new AlertDialog.Builder(HomeActivity.this);\r\n                builder.setTitle(\"Attach a photo\");\r\n                builder.setItems(options, new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int item) {\r\n                        if (options[item].equals(options[0]))\r\n                        {\r\n                            Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n                            startActivityForResult(intent, CAMERA_PHOTO);\r\n                        }\r\n                        else if (options[item].equals(options[1]))\r\n                        {\r\n                            Intent intent = new Intent(Intent.ACTION_PICK,android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);\r\n                            startActivityForResult(intent, GALLERY_PHOTO);\r\n                        }\r\n                        else if (options[item].equals(options[2])) {\r\n                            dialog.dismiss();\r\n                        }\r\n                    }\r\n                });\r\n                builder.show();\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (resultCode == RESULT_OK) {\r\n            if (requestCode == CAMERA_PHOTO) {\r\n                Bundle extras = data.getExtras();\r\n                bitmapImage = (Bitmap)extras.get(\"data\");\r\n                imageButton.setImageBitmap(bitmapImage);\r\n            }\r\n            else if (requestCode == GALLERY_PHOTO) {\r\n                uriImage = data.getData();\r\n                imageButton.setImageURI(uriImage);\r\n            }\r\n        }\r\n    }\r\n\r\n//    //need to ask yirat\r\n//    private void initializationImage() {\r\n//        String path = \"Families/\" + getCurrFamilyId();\r\n//        FirebaseStorage storage = FirebaseStorage.getInstance();\r\n//        StorageReference mStorageRef = storage.getReference(path);\r\n//        if (mStorageRef != null)\r\n//        {\r\n//\r\n//        }\r\n//\r\n//        else\r\n//        {\r\n//            imageButton.setImageResource(R.drawable.new_family);\r\n//        }\r\n//\r\n//    }\r\n//\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/tiptop/LogInAndSignUp/HomeActivity.java	(revision 25e1d717659400f0d9c4f54dfd52c054b378d08c)
+++ app/src/main/java/com/example/tiptop/LogInAndSignUp/HomeActivity.java	(date 1609779317063)
@@ -35,6 +35,7 @@
 import static com.example.tiptop.Database.Database.getPermission;
 import static com.example.tiptop.Database.Database.initializationCurrFamilyIdAndPermission;
 import static com.example.tiptop.Database.Database.setCurrFamilyId;
+import static com.example.tiptop.Database.Database.updateHomePic;
 import static com.example.tiptop.Database.Database.updateListOfFamilyFromDB;
 import static com.example.tiptop.Database.Database.uploadImage;
 
@@ -66,10 +67,15 @@
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_home);
+
         initializationFromXML();
-        initializationCurrFamilyIdAndPermission();
+
+        initializationCurrFamilyIdAndPermission(imageButton,getApplicationContext());
+
         initializeClassVariables();
+
         spinerActive();
+
         ActivateAllButtons();
     }
 
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\nplugins {\r\n    id 'com.android.application'\r\n}\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion \"30.0.2\"\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.tiptop\"\r\n        minSdkVersion 16\r\n        targetSdkVersion 30\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\napply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'\r\n\r\ndependencies {\r\n    implementation platform('com.google.firebase:firebase-bom:26.1.1')\r\n    implementation 'com.google.firebase:firebase-analytics'\r\n    implementation 'androidx.appcompat:appcompat:1.1.0'\r\n    implementation 'com.google.android.material:material:1.1.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'\r\n    implementation 'com.google.firebase:firebase-auth'\r\n    implementation 'com.google.firebase:firebase-database'\r\n    implementation 'com.google.firebase:firebase-storage'\r\n    implementation 'com.google.android.material:material:1.0.0'\r\n    implementation 'com.android.support:support-annotations:28.0.0'\r\n    implementation 'com.google.firebase:firebase-config:20.0.2'\r\n    testImplementation 'junit:junit:4.+'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.1'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision 25e1d717659400f0d9c4f54dfd52c054b378d08c)
+++ app/build.gradle	(date 1609775069701)
@@ -33,6 +33,7 @@
 
 dependencies {
     implementation platform('com.google.firebase:firebase-bom:26.1.1')
+    implementation 'com.squareup.picasso:picasso:2.71828'
     implementation 'com.google.firebase:firebase-analytics'
     implementation 'androidx.appcompat:appcompat:1.1.0'
     implementation 'com.google.android.material:material:1.1.0'
